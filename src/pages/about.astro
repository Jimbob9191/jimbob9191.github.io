---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Navigation from '../components/navigation.astro';
import Footer from '../components/footer.astro';
import Header from '../components/header.astro';
import '../styles/global.css';
const pageTitle = "About Me";
const identity = {
    firstName: "James",
    country: "England",
    occupation: "UX/UI Developer",
    hobbies: ["Photograph", "Design", "Cycling"],
};
const skills = ["HTML", "CSS", "Javascript", "React", "Astro", "UX", "UI"]
const happy = true;
const finished = false;
const goal = 3;
const skillColor = "Navy";
---

<Layout title= {pageTitle}>
	<main>
        <Header />
		<h1>{pageTitle}</h1>
        <h2>...And my new Astro site!</h2>
		<p>I am working through Astro's introductory tutorial. This is the second page on my website, and it's the first one I built myself!</p>
		<p>This site will update as I complete more of the tutorial, so keep checking back and see how my journey is going!</p>
        <p>Here are a few facts about me:</p>
        <ul>
        <li>My name is {identity.firstName}.</li>
        <li>I live in {identity.country} and I work as a {identity.occupation}.</li>
        {identity.hobbies.length >= 2 &&
            <li>Two of my hobbies are: {identity.hobbies[0]} and {identity.hobbies[1]}</li>
        }
        </ul>
        <p>My skills are:</p>
        <ul>
        {skills.map((skill) => <li class="skill">{skill}</li>)}
        </ul>
        {happy && <p>I'm happy to be learning Astro!</p>}
        {finished && <p>I finished this tutorial!</p>}
        {goal === 3 ? <p>My goal is to finish in 3 days.</p> : <p>My goal is not 3 days.</p>}
        <Footer />
	</main>
</Layout>

<!-- you can define more variables by adding commas between them -->
<style define:vars={{skillColor}}> 
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
    .skill{
        color: var(--skillColor);
        font-weight: bold;
    }
</style>
